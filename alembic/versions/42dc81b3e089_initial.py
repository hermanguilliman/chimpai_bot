"""initial

Revision ID: 42dc81b3e089
Revises:
Create Date: 2025-06-10 19:52:50.715339

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "42dc81b3e089"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("basic_personality", schema=None) as batch_op:
        batch_op.alter_column(
            "text", existing_type=sa.TEXT(), type_=sa.String(), nullable=False
        )

    with op.batch_alter_table("custom_personality", schema=None) as batch_op:
        batch_op.alter_column(
            "name", existing_type=sa.TEXT(), type_=sa.String(), nullable=False
        )
        batch_op.alter_column(
            "text", existing_type=sa.TEXT(), type_=sa.String(), nullable=False
        )

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("custom_personality", schema=None) as batch_op:
        batch_op.alter_column(
            "text", existing_type=sa.String(), type_=sa.TEXT(), nullable=True
        )
        batch_op.alter_column(
            "name", existing_type=sa.String(), type_=sa.TEXT(), nullable=True
        )

    with op.batch_alter_table("basic_personality", schema=None) as batch_op:
        batch_op.alter_column(
            "text", existing_type=sa.String(), type_=sa.TEXT(), nullable=True
        )

    # ### end Alembic commands ###
