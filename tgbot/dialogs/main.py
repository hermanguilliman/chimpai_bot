from aiogram.types import ParseMode
from aiogram_dialog import Dialog, Window
from aiogram_dialog.widgets.kbd import Row, Start
from aiogram_dialog.widgets.text import Const, Format

from tgbot.getters.base_data import get_base_data
from tgbot.misc.states import Main, Neural, Settings

main_dialog = Dialog(
    Window(
        # –ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
        Const("<b>–ì–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω ChimpAI üêµ</b>\n"),
        Const("<b>üñ• –¢–µ–∫—É—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞:</b>\n"),
        Format("ü§ñ –ê–∫—Ç–∏–≤–Ω–∞—è –º–æ–¥–µ–ª—å: <b>{model}</b>", when="model"),
        Format("üîã –î–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞: <b>{max_length}</b> —Ç–æ–∫–µ–Ω–æ–≤", when="max_length"),
        Format("üß† –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–∞: <b>{temperature}</b>", when="temperature"),
        Format("üé≠ –õ–∏—á–Ω–æ—Å—Ç—å: <b>{personality}</b>", when="personality"),
        Row(
            Start(Const("ü§ñ –ß–∞—Ç"), id="neural", state=Neural.chat),
            Start(Const("üìù –ù–∞—Å—Ç—Ä–æ–π–∫–∏"), id="settings", state=Settings.select),
        ),
        state=Main.main,
        getter=get_base_data,
        parse_mode=ParseMode.HTML,
    ),
)
