from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram_dialog import Dialog, Window, Dialog, DialogManager
from aiogram_dialog.widgets.text import Format, Const
from aiogram_dialog.widgets.kbd import Button
from tgbot.models.aisettings import AISettings
from tgbot.services.repository import Repo
from tgbot.dialogs.settings import Settings
from aiogram.types import CallbackQuery


class Main(StatesGroup):
    main = State()


async def show_settings(callback: CallbackQuery, button: Button,
                    manager: DialogManager):
    """ –°—Ç–∞—Ä—Ç—É–µ—Ç –¥–∏–∞–ª–æ–≥ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏"""
    await manager.start(Settings.select, data=manager.current_context().data)


async def get_main_data(repo: Repo, dialog_manager: DialogManager, **kwargs):
    data = dialog_manager.current_context().start_data
    settings: AISettings = await repo.get_user_settings(data.get('user_id'))
    # –∫–∞–∫–æ–π —Ç–æ –∫–æ—Å—Ç—ã–ª—å –ø–æ–ª—É—á–∞–µ—Ç—Å—è, –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –±–¥
    if data.get('new_model'):
        print('got new model', data.get('new_model'))
        # await repo.update_model(data.get('user_id'), data.get('new_model'))
    if data.get('new_max_length'):
        print("–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –Ω–æ–≤–∞—è —Ö—É–π–Ω—è:", data)
        # await repo.update_model(data.get('user_id'), data.get('new_max_length'))
    if data.get('new_temperature'):
        print(data.get('new_temperature'))
        # await repo.update_model(data.get('user_id'), data.get('new_temperature'))


    base = {
        'full_name': data.get('full_name'),
        'model': settings.model,
        'max_length': settings.max_tokens,
        'temperature': settings.temperature,
    }
    return base


main_dialog = Dialog(
    Window(
        # –ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
        Const("<b>ChimpAI [beta]</b>\n"),
        Format("–ü—Ä–∏–≤–µ—Ç, <b>{full_name}</b>!\n", when='full_name'),
        Format("–ê–∫—Ç–∏–≤–Ω–∞—è –º–æ–¥–µ–ª—å: {model}", when='model'),
        Format("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞: {max_length}", when='max_length'),
        Format("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temperature}", when='temperature'),
        # Start(Const("üõ† –ù–∞—Å—Ç—Ä–æ–π–∫–∏"), id='settings', state=Settings.select, data="user_id"),
        Button(Const("üõ† –ù–∞—Å—Ç—Ä–æ–π–∫–∏"), id='settings', on_click=show_settings),
        state=Main.main,
        getter=get_main_data,
        parse_mode='HTML',
        preview_data={
            'full_name':'–ù–µ–∑–Ω–∞–∫–æ–º–µ—Ü',
        }
    ),
)