from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.types import Message, CallbackQuery
from typing import Any

from aiogram_dialog import Dialog, DialogManager, Window, ChatEvent, Data
from aiogram_dialog.widgets.text import Format, Const
from aiogram_dialog.widgets.kbd import Button, Next, Cancel, Back, Row, Start, Select, SwitchTo, Column, Group
from aiogram_dialog.widgets.input import MessageInput
from tgbot.models.aisettings import AISettings
from tgbot.services.repository import Repo
from tgbot.services.openai import OpenAIService


class Settings(StatesGroup):
    select = State()
    model = State()
    max_length = State()
    temperature = State()


async def on_new_model_selected(callback: ChatEvent, select: Any,
                         manager: DialogManager,
                         item_id: str):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –¥–ª–∏–Ω—ã –ø–æ –Ω–∞–∂–∞—Ç–∏—é –∫–Ω–æ–ø–∫–∏"""
    repo: Repo = manager.data['repo']
    user_id = manager.current_context().start_data['user_id']
    await repo.update_user_model(user_id=user_id, model=item_id)
    await manager.done()


async def on_max_length_selected(callback: ChatEvent, select: Any,
                         manager: DialogManager,
                         item_id: str):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –¥–ª–∏–Ω—ã –ø–æ –Ω–∞–∂–∞—Ç–∏—é –∫–Ω–æ–ø–∫–∏"""
    repo: Repo = manager.data['repo']
    user_id = manager.current_context().start_data['user_id']
    await repo.update_user_max_tokens(user_id=user_id, max_tokens=item_id)
    await manager.done()


async def get_data_model_selector(openai: OpenAIService, dialog_manager: DialogManager, **kwargs):
    engines = await openai.get_engines()
    engine_ids = [engine['id'] for engine in engines['data']]
    return {
        'models': engine_ids,
    }

# –î–∏–∞–ª–æ–≥ –Ω–∞—Å—Ç—Ä–æ–µ–∫
settings_dialog = Dialog(
    Window(
        # –û–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        Const('<b>–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–µ–ª–∏ –±—ã –∏–∑–º–µ–Ω–∏—Ç—å:</b>'),
        Row(
        SwitchTo(Const('ü§ñ –ú–æ–¥–µ–ª—å'), id='set_model', state=Settings.model),
        SwitchTo(Const('üìè –î–ª–∏–Ω–∞'), id='set_max_length', state=Settings.max_length),
        SwitchTo(Const('üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞'), id='set_temperature', state=Settings.temperature),
        ),
        Cancel(Const('üôä –û—Ç–º–µ–Ω–∞')),
        state=Settings.select,
        parse_mode='HTML',

    ),
    Window(
        # –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π
        Const("<b>–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å –∏–∑ —Å–ø–∏—Å–∫–∞:</b>"),
        Group(
            Select(
                Format("{item}"),
                # –Ω—É–∂–Ω–æ –∫–∏–Ω—É—Ç—å —Å—é–¥–∞ —Å–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π
                items='models',
                item_id_getter=lambda x: x,
                id='select_max_new_model',
                on_click=on_new_model_selected,
            ),
            width=1,
        ),
        Cancel(Const('üôä –û—Ç–º–µ–Ω–∞')),
        state=Settings.model,
        parse_mode='HTML',
        getter=get_data_model_selector,
    ),
    Window(
        # –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —á–∏—Å–ª–∞ —Ç–æ–∫–µ–Ω–æ–≤ –Ω–∞ –∑–∞–ø—Ä–æ—Å,
        # –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π –¥–∏–∞–ø–∞–∑–æ–Ω –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è
        # –Ω–∞–ø—Ä–∏–º–µ—Ä –æ—Ç 1 –¥–æ 4000 –¥–ª—è –º–æ–¥–µ–ª–∏ text-davinci-003
        Const("<b>–£–∫–∞–∂–∏—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ —Ç–æ–∫–µ–Ω–æ–≤ —Ä–∞—Å—Ö–æ–¥—É–µ–º–æ–µ –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –Ω–µ–π—Ä–æ—Å–µ—Ç–∏:</b>"),
        Group(
            Select(
                Format("{item}"),
                items=list(range(0, 4000+1, 100)),
                item_id_getter=lambda x: x,
                id='select_max_length',
                on_click=on_max_length_selected,
            ),
            width=5,
        ),
        Cancel(Const('üôä –û—Ç–º–µ–Ω–∞')),
        state=Settings.max_length,
        parse_mode='HTML',
    ),
    Window(
        # –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã 
        # –æ—Ç 0.00 –¥–æ 1.00 —Å –¥–≤—É–º—è –∑–Ω–∞–∫–∞–º–∏ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π
        Const("–£–∫–∞–∂–∏—Ç–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É"),
        Cancel(Const('üôä –û—Ç–º–µ–Ω–∞')),
        state=Settings.temperature,
        parse_mode='HTML',
    ),
)