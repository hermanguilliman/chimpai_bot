from aiogram.enums import ContentType, ParseMode
from aiogram_dialog import Dialog, Window
from aiogram_dialog.widgets.input import MessageInput
from aiogram_dialog.widgets.kbd import Cancel, Row, Start
from aiogram_dialog.widgets.text import Const, Format

from tgbot.getters.base_data import get_base_data
from tgbot.handlers.neural_chat import neural_handler
from tgbot.handlers.voice_transcribe import voice_handler
from tgbot.handlers.images import image_creator_handler
from tgbot.misc.states import Neural, Settings

neural_chat = Dialog(
    Window(
        # –ù–µ–π—Ä–æ—á–∞—Ç. –ü–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ —á–∏—Ç–∞–µ—Ç —Ç–µ–∫—Å—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        MessageInput(neural_handler, content_types=[ContentType.TEXT]),
        Format("<b>–õ–∏—á–Ω–æ—Å—Ç—å: {personality}\n</b>", when="personality"),
        Const("<b>–ó–∞–¥–∞–π –º–Ω–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å...</b>"),
        Row(
            Cancel(Const("üëà –ù–∞–∑–∞–¥")),
            Start(Const("üìù –ù–∞—Å—Ç—Ä–æ–π–∫–∏"), id="settings", state=Settings.select),
        ),
        state=Neural.chat,
        parse_mode=ParseMode.HTML,
        getter=get_base_data,
    ),
    Window(
        MessageInput(voice_handler, content_types=[ContentType.VOICE]),
        Const("<b>üì¢ –ó–∞–ø–∏—à–∏—Ç–µ –∏–ª–∏ –ø–µ—Ä–µ—à–ª–∏—Ç–µ –≤–æ–π—Å</b>"),
        Cancel(Const("üëà –ù–∞–∑–∞–¥")),
        state=Neural.transcribe,
        parse_mode=ParseMode.HTML,
    ),

    Window(
        MessageInput(image_creator_handler, content_types=[ContentType.TEXT]),
        Const("<b>üñå –ù–∞–ø–∏—à–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...</b>"),
        Cancel(Const("üëà –ù–∞–∑–∞–¥")),
        state=Neural.image_create,
        parse_mode=ParseMode.HTML,
    ),
)
